\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\@writefile{toc}{\contentsline {section}{\numberline {1}Basics}{2}{section.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1}Preprocessor directives}{2}{subsection.1.1}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {1}Prevent circular includes}{2}{lstlisting.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2}Casting}{2}{subsection.1.2}}
\newlabel{itm:static_cast}{{3}{2}{Casting}{Item.3}{}}
\newlabel{itm:static_cast@cref}{{[enumi][3][]3}{2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.3}Structs}{2}{subsection.1.3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.4}Stack and heap}{3}{subsection.1.4}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.4.1}Freeing memory}{3}{subsubsection.1.4.1}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {2}Memory leak}{3}{lstlisting.2}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {3}Valgrind output}{3}{lstlisting.3}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {4}No memory leak}{4}{lstlisting.4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.5}Strings}{4}{subsection.1.5}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.5.1}C style}{4}{subsubsection.1.5.1}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.5.2}C++ style}{4}{subsubsection.1.5.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.6}Exceptions}{5}{subsection.1.6}}
\@writefile{toc}{\contentsline {section}{\numberline {2}Object oriented programming}{6}{section.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}Access specifiers}{6}{subsection.2.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}Reminder of syntax}{6}{subsection.2.2}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {5}SpreadsheetCell.h}{6}{lstlisting.5}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {6}SpreadsheetCell.cpp}{6}{lstlisting.6}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3}Creating objects on the stack or heap}{6}{subsection.2.3}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {7}Creating objects on the stack}{6}{lstlisting.7}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {8}Creating objects on the heap}{7}{lstlisting.8}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.4}Constructors}{7}{subsection.2.4}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.4.1}Initialiser lists}{7}{subsubsection.2.4.1}}
\newlabel{lst:initialiserList}{{9}{8}{C++ gets it right with the name clash}{lstlisting.9}{}}
\newlabel{lst:initialiserList@cref}{{[lstlisting][9][]9}{8}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {9}C++ gets it right with the name clash}{8}{lstlisting.9}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.5}Default constructors}{9}{subsection.2.5}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.5.1}When you need a default constructor}{9}{subsubsection.2.5.1}}
\@writefile{toc}{\contentsline {paragraph}{\numberline {2.5.1.1}Arrays}{9}{paragraph.2.5.1.1}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {10}Example of \emph  {initialisers}}{9}{lstlisting.10}}
\@writefile{toc}{\contentsline {paragraph}{\numberline {2.5.1.2}Creating objects inside another class}{10}{paragraph.2.5.1.2}}
\@writefile{toc}{\contentsline {paragraph}{\numberline {2.5.1.3}Subclasses}{10}{paragraph.2.5.1.3}}
